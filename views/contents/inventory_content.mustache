<script>
    // fetch("/inventory/product/1023", {
    //     method: "GET",
    //     headers: {
    //         "Content-Type": "application/json"
    //     },
    // })
    // .then(res => res.json())
    // .then(resutls => {
    //     console.log(resutls);
    //     console.log(resutls.data);
    //     console.log(typeof resutls.data);
    // })
    // .catch(error => {
    //     console.error(error);
    // })
</script>
<div class="container-fluid">
    <!-- Page Heading -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Inventory</h1>
        <div id="add-stocks-button"><a href="#" class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm"><i>Add Stocks</i></a></div>
        <div id="return-button" hidden><a href="#" class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm"><i>Return</i></a></div>
    </div>
    <!-- DataTales Example -->
    <div class="card shadow mb-4" id="card-products">
        <div class="card">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Products</h6>
            </div>
            <div class="card-body" id="surat-masuk">
                <div class="table-responsive">
                    <table class="table table-bordered table-hover table-striped" id="dataTable" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>Manufacturer</th>
                                <th>Name</th>
                                <th>Serial Number</th>
                                <th>Stocks</th>
                                <th>Price</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                        {{#products}}
                            <tr>
                                <td>{{manufacturer}}</td>
                                <td>{{name}}</td>
                                <td>{{serial_number}}</td>
                                <td>{{stocks}}</td>
                                <td>{{price}}</td>
                                <td>
                                    <div class="dropdown">
                                        <a href="javascript:void(0);">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24"><path fill="currentColor" fill-opacity="0" d="M20 7L17 4L15 6L18 9L20 7Z"><animate fill="freeze" attributeName="fill-opacity" begin="1.2s" dur="0.15s" values="0;0.3"/></path><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path stroke-dasharray="20" stroke-dashoffset="20" d="M3 21H21"><animate fill="freeze" attributeName="stroke-dashoffset" dur="0.3s" values="20;0"/></path><path stroke-dasharray="44" stroke-dashoffset="44" d="M7 17V13L17 3L21 7L11 17H7"><animate fill="freeze" attributeName="stroke-dashoffset" begin="0.4s" dur="0.6s" values="44;0"/></path><path stroke-dasharray="8" stroke-dashoffset="8" d="M14 6L18 10"><animate fill="freeze" attributeName="stroke-dashoffset" begin="1s" dur="0.2s" values="8;0"/></path></g></svg>
                                        </a>
                                        <a href="javascript:void(0);" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 20 20"><g fill="currentColor"><circle cx="10" cy="15" r="2"/><circle cx="10" cy="10" r="2"/><circle cx="10" cy="5" r="2"/></g></svg>
                                        </a>
                                
                                        <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                                            <a class="dropdown-item" href="javascript:void(0);">Detail</a>
                                            <div class="dropdown-divider"></div>
                                            <a class="dropdown-item" href="javascript:void(0);">Remove</a>
                                            <!-- Tambahkan opsi dropdown lainnya sesuai kebutuhan -->
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            {{/products}}
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="card-body" id="surat-keluar" style="display: none;">
            </div>
        </div>
    </div>
    


    <script>
        // document.getElementById('productForm').addEventListener('submit', function(event) {
        // event.preventDefault();

        // var productName = document.getElementById('productName').value;
        // var newProductName = document.getElementById('newProductName').value;

        // // Lakukan sesuatu dengan data formulir (misalnya, kirim ke server, tampilkan di halaman, dll.)
        // if (productName === 'newProduct' && newProductName.trim() !== '') {
        //     alert('Menambahkan produk baru: ' + newProductName);
        // } else {
        //     alert('Memilih produk: ' + productName);
        // }
        // });
    </script>
    <div class="card shadow mb-4" id="card-add-stocks" hidden>
        <div class="card">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Add Stock</h6>
            </div>
            <div class="card-body">
                <div class="form-wrap">	
                    <form id="inventory-form">
                        <div class="row">
                            <div class="col-md-12">
                            <div id="existing-product">
                                    <div class="form-group">
                                        <label id="judul-surat-label" for="product_name">Product Name</label>
                                        <select class="form-control scrollable-menu" id="product-name" name="productName" onchange="checkNewProduct()" onfocus="this.size=1;" onchange='this.size=1;' required>
                                            <option value="" selected disabled>Select Product</option>
                                            <option value="newProduct">New Product</option>
                                            {{#products}}
                                                <option value="{{id}}">{{manufacturer}} {{name}} | stocks: {{stocks}}</option>
                                            {{/products}}
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row" id="new-product" style="display: none;">
                            <div class="col-md-12">
                                <label id="new-product-ilabel" for="new-product-input">Product Name</label>
                                <div class="input-group mb-3">
                                    <input type="email" name="new-product" id="new-product-form" placeholder="EX: Intel i5 5600U" class="form-control" required>
                                    <div class="input-group-append">
                                      <a href="javascript:void(0);" class="input-group-text" id="button-cancel-new-product" onclick="cancelNewProduct()">cancel</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <script>
                                    const products = [
                                    {
                                    "id": 10002,
                                    "name": "Intel i5 5600U",
                                    "serial_number": "S320482057454534",
                                    "manufacturer": "100022",
                                    "price": "1.640.600",
                                    "weight": 240,
                                    "category": "9922",
                                    "stock": 64,
                                },{
                                    "id": 10004,
                                    "name": "Intel i7 7600U",
                                    "serial_number": "S320482057454534",
                                    "manufacturer": "100022",
                                    "price": "1.890.600",
                                    "weight": 239,
                                    "category": "9922",
                                    "stock": 48,
                                },{
                                    "id": 10003,
                                    "name": "Intel i9 9600U",
                                    "serial_number": "S320482057454534",
                                    "manufacturer": "100022",
                                    "price": "2.640.600",
                                    "weight": 238,
                                    "category": "9922",
                                    "stock": 12,
                                }];
                                const existingProduct = document.getElementById('existing-product');
                                const newProduct = document.getElementById('new-product');
                                function checkNewProduct() {
                                    // Input Form
                                    const productSelect = document.getElementById('product-name');
                                    const manufacturerForm = document.getElementById('manufacturer-form');
                                    const serialNumberForm = document.getElementById('serial-number-form');
                                    const priceForm = document.getElementById("price-form");
                                    const weightForm = document.getElementById("weight-form");
                                    const stockAmountForm = document.getElementById("stock-amount-form");
                                    const categoryForm = document.getElementById("category-form");

                                    serialNumberForm.setAttribute("aria-hidden", "true");
                                    priceForm.setAttribute("aria-hidden", "true");
                                    weightForm.setAttribute("aria-hidden", "true");

                                    // Mengambil semua opsi di manufacturer form
                                    const optionsManufacturer = manufacturerForm.options;
                                    const optionsCategory = categoryForm.options;

                                    if (productSelect.value === 'newProduct') {
                                        existingProduct.style.display = 'none';
                                        newProduct.style.display = 'block';

                                        serialNumberForm.value = null;
                                        manufacturerForm.selectedIndex = 0;
                                        categoryForm.selectedIndex = 0;

                                        priceForm.value = null;
                                        weightForm.value = null;
                                        stockAmountForm.value = null;

                                        serialNumberForm.removeAttribute("disabled");
                                        manufacturerForm.removeAttribute("disabled");
                                        categoryForm.removeAttribute("disabled");
                                        priceForm.removeAttribute("disabled");
                                        weightForm.removeAttribute("disabled");
                                    } else {
                                        // Membatalkan form new 
                                        cancelNewManufacturer(); 
                                        cancelNewCategory();

                                        existingProduct.style.display = 'block';
                                        newProduct.style.display = 'none';

                                        fetch(`/inventory/product/${productSelect.value}`, {
                                            method: "GET",
                                            headers: {
                                                "Content-Type": "application/json"
                                            },
                                        })
                                        .then(res => res.json())
                                        .then(results => {
                                            console.log(results);
                                            serialNumberForm.value = results.data.serialNumber;
                                            serialNumberForm.setAttribute("disabled", true);
                                            priceForm.value = results.data.price;
                                            priceForm.setAttribute("disabled", true);
                                            weightForm.value = results.data.weight;
                                            weightForm.setAttribute("disabled", true);
                                            for (let index = 0; index < optionsManufacturer.length; index++) {
                                                if (results.data.manufacturerId === parseInt(optionsManufacturer[index].value)) {
                                                    manufacturerForm.selectedIndex = index;
                                                    manufacturerForm.setAttribute("disabled", true);
                                                }
                                            }
                                            for (let index = 0; index < optionsCategory.length; index++) {
                                                if (results.data.categoryId === parseInt(optionsCategory[index].value)) {
                                                    categoryForm.selectedIndex = index  ;
                                                    categoryForm.setAttribute("disabled", true);
                                                }
                                            }
                                            
                                        })
                                        .catch(error => {
                                            console.error(error);
                                        })

                                        // for (let index = 0; index < products.length; index++) {
                                        //     if (products[index]["id"] == parseInt(productSelect.value)) {
                                        //         // Menampilkan data produk yang sudah ada
                                        //         const serialNumber = products[index]["serial_number"];  // Ganti dengan data yang sesuai
                                        //         const manufacturer = products[index]["manufacturer"];   // Ganti dengan data yang sesuai
                                        //         const categoryValue = products[index]["category"];

                                        //         serialNumberForm.value = serialNumber;
                                        //         serialNumberForm.setAttribute("disabled", true);
                                        //         priceForm.value = products[index]["price"];
                                        //         priceForm.setAttribute("disabled", true);
                                        //         weightForm.value = products[index]["weight"];
                                        //         weightForm.setAttribute("disabled", true);
                                                
                                        //         for (let index2 = 0; index2 < optionsManufacturer.length; index2++) {
                                        //             if (manufacturer === optionsManufacturer[index2].value) {
                                        //                 manufacturerForm.selectedIndex = index2;
                                        //                 manufacturerForm.setAttribute("disabled", true);
                                        //             }
                                        //         }
                                        //         for (let index3 = 0; index3 < optionsCategory.length; index3++) {
                                        //             if (categoryValue === optionsCategory[index3].value) {
                                        //                 categoryForm.selectedIndex = index3;
                                        //                 categoryForm.setAttribute("disabled", true);
                                        //             }
                                        //         }
                                        //     }
                                        // }
                                        
                                    }
                                }

                                function cancelNewProduct() {
                                    const productSelect = document.getElementById('product-name');
                                    const existingProduct = document.getElementById('existing-product');
                                    const newProduct = document.getElementById("new-product");
                                    const newProductForm = document.getElementById('new-product-form');

                                    const serialNumberForm = document.getElementById('serial-number-form');
                                    const manufacturerForm = document.getElementById('manufacturer_form');
                                    const priceForm = document.getElementById("price-form");
                                    const weightForm = document.getElementById("weight-form");
                                    const stockAmountForm = document.getElementById("stock-amount-form");

                                    serialNumberForm.value = null;
                                    // manufacturerForm.selectedIndex = 0;
                                    priceForm.value = null;
                                    weightForm.value = null;
                                    stockAmountForm.value = null;

                                    existingProduct.style.display = 'block';
                                    newProduct.style.display = 'none';   
                                    productSelect.selectedIndex = 0;

                                    // Menghapus form menjadi empty
                                    newProductForm.value = null;
                                    // cancelNewManufacturer(); // Membatalkan form new manufacturer
                                }
                        </script>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label id="serial_number_label" for="serialNumber">Serial Number</label>
                                    <input type="email" name="serialNumber" id="serial-number-form" placeholder="EX: S23864872548" class="form-control" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div id="existing-manufacturer">
                                    <div class="form-group">
                                        <label id="manufacturer" for="manufacturer">Manufacturer</label>
                                        <select class="form-control scrollable-menu" id="manufacturer-form" name="manufacturer" onchange="newManufacturerEvent()" onfocus="this.size=1;" onchange='this.size=1;'>
                                            <option value="" selected disabled>Select Manufacturer</option>
                                            <option value="newManufacturer">New Manufacturer</option>
                                            {{#manufacturers}}
                                            <option value="{{id}}">{{name}}</option>
                                            {{/manufacturers}}
                                        </select>
                                    </div>
                                </div>
                                <div class="form-group" id="new-manufacturer" style="display: none;">
                                    <label id="new-manufacturer-label" for="weight">New Manufacturer</label>
                                    <div class="input-group mb-3">
                                    <input type="new-manufacturer" name="new-manufacturer" id="new-manufacturer-form" class="form-control" placeholder="Ex: Intel Corporation" onclick="newManufacturerEvent()"/>
                                    <div class="input-group-append">
                                        <a href="#" class="input-group-text" id="button-cancel-new-category" onclick="cancelNewManufacturer()">cancel</a>
                                    </div>
                                    </div>
                                </div>
                                <script>
                                    const newManufacturer = document.getElementById("new-manufacturer");
                                    const newManufacturerForm = document.getElementById("new-manufacturer-form");
                                    const existinManufacturer = document.getElementById("existing-manufacturer");
                                    const manufacturerForm = document.getElementById("manufacturer-form");
                                    function newManufacturerEvent() {
                                        if (manufacturerForm.value === "newManufacturer") {
                                            newManufacturer.style.display = "block";
                                            existinManufacturer.style.display = "none";
                                            return;
                                        }
                                        newManufacturer.style.display = "none";
                                        existinManufacturer.style.display = "block";
                                    }

                                    function cancelNewManufacturer() {
                                        newManufacturerForm.value = null;
                                        newManufacturer.style.display = "none";
                                        existinManufacturer.style.display = "block";
                                        manufacturerForm.selectedIndex = 0;

                                    }
                                </script>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label id="pengirim-label" for="stock">Stock Amount</label>
                                    <input type="stock" name="stock" id="stock-amount-form" class="form-control" placeholder="Ex: 1024"/>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label id="price_label" for="pengirim">Price</label>
                                    <input type="number" name="price" id="price-form" class="form-control" placeholder="Ex: 2.240.000 (IDR)"/>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label id="pengirim-label" for="weight">Weight</label>
                                    <input type="pengirim" name="weight" id="weight-form" class="form-control" placeholder="Ex: 1024 (Gram)"/>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div id="existing-category">
                                    <div class="form-group">
                                        <label id="judul-surat-label" for="product_name">Product Category</label>
                                        <select class="form-control scrollable-menu" id="category-form" name="productName" onchange="newCategoryEvent()" onfocus="this.size=1;" onchange='this.size=1;'>
                                            <option value="" selected disabled>Select Category</option>
                                            <option value="newCategory">New Category</option>
                                            {{#categories}}
                                            <option value="{{id}}">{{name}}</option>
                                            {{/categories}}
                                        </select>
                                    </div>
                                </div>
                                <div class="form-group" id="new-category" style="display: none;">
                                    <label id="new-category-label" for="weight">New Category</label>
                                    <div class="input-group mb-3">
                                    <input type="new-category" name="new-category" id="new-category-form" class="form-control" placeholder="Ex: Processor"/>
                                    <div class="input-group-append">
                                        <a href="#" class="input-group-text" id="button-cancel-new-category" onclick="cancelNewCategory()">cancel</a>
                                    </div>
                                    </div>
                                </div>
                                <script>
                                    const categorySelect = document.getElementById("category-form");
                                    const existingCategory = document.getElementById("existing-category");
                                    const newCategory = document.getElementById("new-category");
                                    const newCategoryForm = document.getElementById("new-category-form");
                                    function newCategoryEvent() {
                                        if (categorySelect.value === "newCategory") {
                                            existingCategory.style.display = "none";
                                            newCategory.style.display = "block";
                                        } else {
                                            existingCategory.style.display = "block";
                                            newCategory.style.display = "none";
                                        }
                                    }   

                                    function cancelNewCategory() {
                                        newCategoryForm.value = null;
                                        categorySelect.selectedIndex = 0;
                                        existingCategory.style.display = "block";
                                        newCategory.style.display = "none";
                                    }
                                </script>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label>Notes <small>(optional)</small></label>
                                    <textarea  id="comments" class="form-control" name="comment" placeholder="Write somethings..."></textarea>
                                </div>
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-2">
                                <button type="submit" id="submit" class="btn btn-primary btn-block">Upload</button>
                            </div>
                        </div>

                    </form>
                </div>	
            </div>
        </div>
    </div>
</div>
<script>
    const cardProducts = document.getElementById("card-products");
    const cardAddStocks = document.getElementById("card-add-stocks");
    const addStocksButton = document.getElementById("add-stocks-button")
    // const inventoryButton = document.getElementById("inventory-button");
    const returnButton = document.getElementById("return-button")

    addStocksButton.addEventListener("click", () => {
        cardAddStocks.removeAttribute("hidden");
        returnButton.removeAttribute("hidden");
        addStocksButton.setAttribute("hidden", true);
        cardProducts.setAttribute("hidden",true)
    });
    returnButton.addEventListener("click", () => {
        cardAddStocks.setAttribute("hidden", true);
        returnButton.setAttribute("hidden", true);
        addStocksButton.removeAttribute("hidden");
        cardProducts.removeAttribute("hidden");
    });
</script>